stages:
  - init
  - test
  - tag_deploy
  - cleanup

variables:
  VENV_ROOT: C:\temp\builds

# Set environment vars
#before_script:
#  - call C:\WinPython34\scripts\env.bat
#  - python -c "import sys;print(sys.version)"

#################################################
### Python34_x64 jobs                         ###
#################################################
python34_x64-pip-install:
  stage: init
  when: always
  tags:
    - python
  script:
    - call C:\WinPython34\scripts\env.bat
    - python -c "import sys;print('='*80+'\n{}\n'.format(sys.version)+'-'*80)"
    - python -m venv --clear %VENV_ROOT%\python34_x64\%CI_PROJECT_ID%__%CI_BUILD_REF_NAME%
    - call %VENV_ROOT%\python34_x64\%CI_PROJECT_ID%__%CI_BUILD_REF_NAME%\Scripts\activate.bat
    # Can't upgrade pip in place.
    # See https://github.com/pypa/pip/issues/1299#issuecomment-188198496
    - python -m pip install --upgrade --no-cache-dir pip==8.1.0
    - pip install -r requirements.txt --no-cache-dir
    - pip install -r dev-requirements.txt --no-cache-dir
    # Build-specific versions shouldn't be in dev-requirements.txt
    - pip install --no-cache-dir https://gitlab.com/dougthor42/wxPython_Phoenix-wheels/raw/master/from_snapshot_builds/wxPython_Phoenix-3.0.3.dev1956+aab2833-cp34-cp34m-win_amd64.whl

    # Manually fix the bugs with wxPythonPhoenix
    - copy /B /Y /V build_reqs\wx_mods\core.py %VENV_ROOT%\python34_x64\%CI_PROJECT_ID%__%CI_BUILD_REF_NAME%\Lib\site-packages\wx\core.py
    - copy /B /Y /V build_reqs\wx_mods\FCObjects.py %VENV_ROOT%\python34_x64\%CI_PROJECT_ID%__%CI_BUILD_REF_NAME%\Lib\site-packages\wx\lib\floatcanvas\FCObjects.py

python34_x64-tests:
  stage: test
  when: on_success
  tags:
    - python
  script:
    - call C:\WinPython34\scripts\env.bat
    - python -c "import sys;print('='*80+'\n{}\n'.format(sys.version)+'-'*80)"
    - call %VENV_ROOT%\python34_x64\%CI_PROJECT_ID%__%CI_BUILD_REF_NAME%\Scripts\activate.bat
    - green -vvv -s 1 wafer_map

python34_x64-tag_bundle:
  stage: tag_deploy
  when: on_success
  tags:
    - python
  only:
    - tags
  script:
    - call C:\WinPython34\scripts\env.bat
    - python -c "import sys;print('='*80+'\n{}\n'.format(sys.version)+'-'*80)"
    - call %VENV_ROOT%\python34_x64\%CI_PROJECT_ID%__%CI_BUILD_REF_NAME%\Scripts\activate.bat
    - python setup.py sdist bdist_wheel
  artifacts:
    paths:
      - dist/*.whl

python34_x64-clean-up:
  stage: cleanup
  when: always
  tags:
    - python
  script:
    - rd /S /Q %VENV_ROOT%\python34_x64\%CI_PROJECT_ID%__%CI_BUILD_REF_NAME%


#################################################
### Python27_x32 jobs                         ###
#################################################
python27_x32-pip-install:
  stage: init
  when: always
  tags:
    - python
  script:
    - call C:\WinPython27_x32\scripts\env.bat
    - python -c "import sys;print('='*80+'\n{}\n'.format(sys.version)+'-'*80)"
    - pip install --no-cache-dir virtualenv
    - python -m virtualenv --clear %VENV_ROOT%\python27_x32\%CI_PROJECT_ID%__%CI_BUILD_REF_NAME%
    - call %VENV_ROOT%\python27_x32\%CI_PROJECT_ID%__%CI_BUILD_REF_NAME%\Scripts\activate.bat
    # Can't upgrade pip in place.
    # See https://github.com/pypa/pip/issues/1299#issuecomment-188198496
    - python -m pip install --upgrade --no-cache-dir pip
    - pip install -r requirements.txt --no-cache-dir
    - pip install -r dev-requirements.txt --no-cache-dir
    # Build-specific versions shouldn't be in dev-requirements.txt
    - pip install --no-cache-dir https://gitlab.com/dougthor42/wxPython_Phoenix-wheels/raw/master/from_snapshot_builds/wxPython_Phoenix-3.0.3.dev1956+aab2833-cp27-cp27m-win32.whl

    # Manually fix the bugs with wxPythonPhoenix
    - copy /B /Y /V build_reqs\wx_mods\core.py %VENV_ROOT%\python27_x32\%CI_PROJECT_ID%__%CI_BUILD_REF_NAME%\Lib\site-packages\wx\core.py
    - copy /B /Y /V build_reqs\wx_mods\FCObjects.py %VENV_ROOT%\python27_x32\%CI_PROJECT_ID%__%CI_BUILD_REF_NAME%\Lib\site-packages\wx\lib\floatcanvas\FCObjects.py

python27_x32-tests:
  stage: test
  when: on_success
  tags:
    - python
  script:
    - call C:\WinPython27_x32\scripts\env.bat
    - python -c "import sys;print('='*80+'\n{}\n'.format(sys.version)+'-'*80)"
    - call %VENV_ROOT%\python27_x32\%CI_PROJECT_ID%__%CI_BUILD_REF_NAME%\Scripts\activate.bat
#    - green -vvv -s 1 wafer_map
    - python -c "print('This is where the tests go')"

python27_x32-tag_bundle:
  stage: tag_deploy
  when: on_success
  tags:
    - python
  only:
    - tags
  script:
    - call C:\WinPython27_x32\scripts\env.bat
    - python -c "import sys;print('='*80+'\n{}\n'.format(sys.version)+'-'*80)"
    - call %VENV_ROOT%\python27_x32\%CI_PROJECT_ID%__%CI_BUILD_REF_NAME%\Scripts\activate.bat
    - python setup.py sdist bdist_wheel
  artifacts:
    paths:
      - dist/*.whl

python27_x32-clean-up:
  stage: cleanup
  when: always
  tags:
    - python
  script:
    - rd /S /Q %VENV_ROOT%\python27_x32\%CI_PROJECT_ID%__%CI_BUILD_REF_NAME%